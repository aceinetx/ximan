#!/usr/bin/python3

import os;
import sys;
import subprocess;
from os import system, getenv;

HOME = getenv("HOME");
USERNAME = getenv("USERNAME")
if USERNAME == None: USERNAME = getenv("USER")
if USERNAME == None: USERNAME = getenv("LOGNAME")
PREFIX = getenv("PREFIX")
CORE_REPO = "https://github.com/xi816/ximan-core/";
CORE_FILE = f"{HOME}/.config/ximan/core.ximan";
XIMAN_SUDO = "sudo"
if getenv("XIMAN_USE_SUDO") == "0":
    XIMAN_SUDO = ""

def coreSearch(core: str):
  return 0;

def ximanReadCore():
  with open(CORE_FILE, "r") as fcore:
    score = fcore.read();
  core = dict();
  for i in score.split("\n"):
    if (i):
      core[i.split()[0]] = [i.split()[1], i.split()[2]];

  return core;

def ximanUpdate():
  yn = input("Proceed with update? [Y/n]: ");
  if (not yn): yn = "y";
  if (yn == 1):
    return 1;
  if (yn[0] in ["", "Y", "y"]):
    system(f"rm -rf {HOME}/.config/ximan/");
    system(f"git clone {CORE_REPO} {HOME}/.config/ximan/");
    system(f"rm -rf {HOME}/.config/ximan/.git/");
  else:
    return 1;
  return 0;

def ximanInstall(prog: list, upgrade = False):
  toHome = False;
  yn = input("Proceed with installation? [Y/n]: ");
  if (not yn): yn = "y";
  core = ximanReadCore();
  if (prog[0] == "-h"):
    toHome = True;
    prog = prog[1:];
  if (yn[0] in ["", "Y", "y"]):
    for pr in prog:
      if (pr in core):
        print(f"  Installing {pr}...");
        if (toHome):
          if (upgrade):
            system(f"{XIMAN_SUDO} rm -rf {HOME}/{pr}/");
          system(f"{XIMAN_SUDO} mkdir -p {HOME}/{pr}/");
          system(f"{XIMAN_SUDO} git clone {core[pr][0]} {HOME}/{pr}/");
          system(f"{XIMAN_SUDO} chown {USERNAME} -R {HOME}/{pr}/");
        else:
          system(f"{XIMAN_SUDO} mkdir -p {PREFIX}/share/ximan/");
          if (upgrade):
            system(f"{XIMAN_SUDO} rm -rf {PREFIX}/share/ximan/{pr}/");
          system(f"{XIMAN_SUDO} git clone {core[pr][0]} {PREFIX}/share/ximan/{pr}/");
          system(f"{XIMAN_SUDO} chown {USERNAME} -R {PREFIX}/share/ximan/{pr}/");
      else:
        print(f"Package {pr} not found");
        return 1;
  else:
    return 1;
  return 0;

def ximanMain(argc: int, argv: list):
  if (argc == 1):
    print("ximan: no arguments given");
    return 1;
  if (argv[1] == "update"):
    ximanUpdate();
  elif (argv[1] == "install"):
    if (len(argv) < 3):
      print("ximan: no packages given");
      return 1;
    print("Installing packages:");
    if (argv[2] != "-h"): print("  \033[32m"+(" ".join(argv[2:])), end="\033[0m\n");
    else: print("  \033[32m"+(" ".join(argv[3:])), end="\033[0m\n");
    ximanInstall(argv[2:]);
  elif (argv[1] == "upgrade"):
    if (len(argv) < 3):
      print("ximan: no packages given");
      return 1;
    print("Installing packages:");
    if (argv[2] != "-h"): print("  \033[32m"+(" ".join(argv[2:])), end="\033[0m\n");
    else: print("  \033[32m"+(" ".join(argv[3:])), end="\033[0m\n");
    ximanInstall(argv[2:], True);

  return 0;

sys.exit(ximanMain(len(sys.argv), sys.argv));

